---
title: "Type and Function"
linkTitle: "Type and Function"
author: Tsung-Hsi, Wu
# menu: main

# and try
# cd("content/en/notes/julia/typefun")
# weave("type-and-function.jmd"; doctype="hugo", out_path= "_index.md")
## set informat="markdown" if input file is `.md` instead of `.jmd`.
---

## Structure/Type
### Inner & outer constructor
Points:
- A `struct` can have multiple ways to be constructed.
- In general, try to keep inner constructor(s) flexible, and by adding outer constructors to provide alternative approaches for convenience.

Here is an example of **3** inner constructor and **1** outer constructor.
```julia
begin
	struct Time2
		hour::Int64
		minute::Int64
		second::Int64
		# The followings are inner constructions
		# if we didn't write any inner constructor, there is a default one (hidden) 
		#   that looks like:
		Time2(hour, minute, second) = new(hour, minute, second)
		# this constructor allows constructing a type with only two variables.
		Time2(hour, minute) = new(hour, minute, 0)
		function Time2(hours::Float64)
			exacthour = Int64(floor(hours));
			minutes = (hours - exacthour)*60;
			exactmin = Int64(floor(minutes));
			seconds = (minutes - exactmin)*60;
			exactsec = Int64(floor(seconds));
			return new(exacthour, exactmin, exactsec)
		end
	end
	
	# outer constructor
	function Time2(hour::Int64)
		Time2(hour,0,0)
	end
end;

# [println(m) for m in methods(Time2)]
methods(Time2)
```

```julia
Time2(23,10,4)
```

```julia
Time2(23,10)
```

```julia
Time2(23)
```
